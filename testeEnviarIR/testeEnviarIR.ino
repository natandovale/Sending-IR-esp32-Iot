#include <IRremoteESP8266.h>
#include <IRsend.h>

const uint16_t kIrLed = 2;  // ESP8266 GPIO pin to use. Recommended: 4 (D2).

IRsend irsend(kIrLed);  // Set the GPIO to be used to sending the message.

// Example of data captured by IRrecvDumpV2.ino

const uint16_t rawDataLigQuiet[227] = {3140, 1542,  546, 1040,  546, 1040,  548, 252,  566, 252,  566, 254,  564, 1040,  546, 254,  566, 254,  566, 1040,  546, 1040,  548, 252,  566, 1040,  546, 254,  566, 254,  564, 1042,  546, 1040,  546, 254,  566, 1040,  546, 1040,  546, 254,  564, 286,  534, 1040,  546, 254,  564, 276,  542, 286,  532, 1042,  546, 260,  560, 286,  532, 286,  532, 290,  530, 288,  530, 288,  530, 288,  530, 288,  530, 288,  530, 288,  530, 290,  528, 290,  530, 288,  530, 292,  526, 290,  528, 290,  530, 290,  528, 292,  528, 292,  526, 290,  528, 1042,  546, 272,  546, 288,  532, 288,  530, 290,  530, 290,  528, 292,  528, 290,  528, 292,  528, 290,  528, 292,  528, 292,  526, 292,  526, 292,  528, 292,  526, 292,  526, 292,  526, 294,  526, 292,  528, 292,  526, 292,  528, 292,  526, 292,  526, 292,  528, 292,  528, 292,  528, 292,  528, 292,  526, 292,  526, 292,  526, 294,  526, 290,  528, 292,  526, 292,  526, 294,  526, 292,  526, 292,  528, 290,  526, 294,  526, 292,  526, 294,  526, 292,  526, 292,  526, 294,  524, 294,  524, 294,  526, 294,  526, 294,  526, 294,  524, 312,  508, 294,  526, 292,  526, 294,  526, 294,  524, 296,  524, 292,  524, 296,  524, 296,  524, 1044,  544, 286,  532, 1042,  544, 288,  530, 290,  528, 1044,  544, 1042,  544, 286,  532};  // TCL112AC
const uint16_t rawDataLig[227] = {3140, 1544,  546, 1042,  546, 1042,  546, 324,  494, 372,  448, 372,  446, 1044,  544, 368,  450, 370,  448, 1044,  544, 1042,  546, 324,  494, 1042,  546, 364,  454, 372,  446, 1050,  540, 1042,  546, 326,  492, 1044,  546, 1042,  544, 288,  532, 370,  450, 1042,  546, 360,  456, 372,  448, 1042,  544, 368,  450, 372,  446, 458,  362, 506,  312, 506,  278, 544,  272, 546,  272, 548,  310, 508,  282, 536,  310, 510,  310, 506,  282, 540,  310, 510,  310, 508,  292, 524,  312, 508,  310, 1044,  544, 368,  448, 374,  446, 1044,  544, 366,  452, 372,  448, 1042,  546, 1042,  544, 324,  494, 370,  448, 372,  448, 504,  312, 510,  310, 510,  310, 1044,  544, 1042,  544, 1042,  546, 1042,  546, 324,  494, 370,  448, 422,  396, 508,  312, 506,  276, 544,  312, 508,  274, 1082,  544, 1042,  544, 1042,  546, 324,  494, 372,  448, 372,  446, 504,  314, 506,  312, 504,  276, 546,  310, 508,  312, 508,  272, 548,  310, 508,  274, 546,  292, 528,  310, 508,  272, 546,  312, 508,  274, 546,  310, 506,  312, 508,  310, 508,  278, 540,  272, 546,  312, 508,  312, 506,  274, 544,  312, 510,  308, 508,  312, 508,  290, 528,  310, 1044,  544, 366,  452, 372,  446, 506,  312, 1044,  544, 1042,  546, 1042,  544, 324,  494, 1044,  544, 364,  454, 372,  448, 422,  396, 506,  312};  // UNKNOWN 2E653803
                                  
const uint16_t rawDataDeslQuiet[227] = {3142, 1542,  546, 1042,  544, 1040,  546, 252,  568, 252,  566, 252,  568, 1040,  546, 252,  568, 250,  568, 1040,  546, 1042,  546, 252,  568, 1040,  546, 250,  568, 252,  566, 1042,  546, 1040,  546, 252,  566, 1040,  546, 1040,  546, 252,  566, 252,  566, 1042,  550, 248,  566, 254,  566, 252,  568, 1040,  546, 252,  568, 252,  566, 254,  566, 254,  566, 252,  566, 252,  566, 254,  566, 252,  566, 254,  566, 254,  564, 254,  566, 252,  566, 254,  566, 252,  566, 254,  566, 254,  564, 254,  566, 252,  566, 252,  566, 254,  566, 1040,  546, 250,  568, 252,  566, 252,  566, 252,  566, 254,  566, 252,  566, 254,  566, 252,  566, 252,  566, 252,  566, 254,  566, 252,  568, 252,  566, 252,  566, 252,  566, 252,  568, 252,  566, 254,  566, 252,  566, 254,  566, 252,  566, 252,  566, 252,  566, 254,  566, 252,  566, 254,  566, 254,  566, 252,  566, 252,  566, 254,  566, 254,  566, 254,  566, 252,  568, 252,  568, 252,  566, 254,  564, 254,  566, 252,  566, 252,  568, 250,  566, 254,  566, 252,  566, 252,  566, 252,  566, 252,  566, 254,  566, 254,  564, 254,  566, 252,  566, 252,  566, 254,  566, 254,  566, 252,  566, 254,  566, 252,  566, 252,  566, 252,  566, 1040,  546, 252,  568, 1040,  546, 252,  566, 252,  566, 1040,  546, 1040,  546, 252,  566};  // TCL112ACconst uint16_t rawDataDesl[227] = {3136, 1548,  540, 1048,  540, 1046,  542, 264,  554, 268,  522, 306,  512, 1078,  542, 264,  524, 304,  514, 1076,  542, 1044,  540, 268,  518, 1086,  538, 264,  520, 308,  542, 1048,  508, 1078,  542, 262,  522, 1078,  538, 1048,  540, 268,  522, 306,  512, 1078,  540, 266,  522, 306,  514, 304,  514, 1076,  510, 304,  516, 304,  516, 304,  516, 304,  542, 268,  552, 266,  550, 268,  550, 270,  552, 266,  552, 268,  552, 266,  554, 264,  552, 268,  552, 268,  552, 268,  552, 268,  552, 264,  554, 266,  552, 268,  552, 266,  552, 1046,  542, 264,  554, 266,  554, 266,  552, 266,  554, 264,  554, 266,  554, 264,  554, 266,  552, 268,  552, 268,  552, 266,  552, 266,  552, 266,  552, 266,  552, 268,  552, 266,  552, 266,  554, 264,  554, 266,  552, 266,  552, 266,  552, 266,  552, 268,  552, 266,  552, 266,  552, 266,  552, 266,  554, 264,  554, 266,  552, 266,  552, 268,  552, 266,  552, 268,  554, 264,  554, 266,  554, 266,  554, 262,  554, 266,  552, 266,  554, 266,  554, 264,  554, 266,  552, 266,  554, 264,  554, 268,  550, 268,  550, 268,  552, 266,  554, 266,  552, 266,  552, 266,  552, 266,  554, 262,  554, 266,  552, 268,  554, 264,  552, 268,  552, 1048,  542, 262,  554, 1046,  542, 264,  556, 264,  554, 1046,  542, 1044,  542, 264,  554};  // TCL112AC
const uint16_t rawDataDesl[227] = {3140, 1542,  546, 1042,  546, 1040,  546, 252,  568, 252,  566, 252,  566, 1040,  546, 252,  568, 252,  566, 1040,  546, 1040,  546, 252,  566, 1042,  546, 250,  568, 252,  568, 1040,  546, 1040,  546, 252,  566, 1040,  546, 1040,  546, 252,  566, 252,  566, 1042,  546, 252,  566, 252,  566, 1042,  546, 252,  568, 252,  566, 254,  566, 254,  566, 252,  566, 252,  566, 252,  568, 252,  566, 254,  566, 254,  566, 252,  566, 252,  566, 252,  568, 252,  566, 252,  566, 254,  564, 254,  566, 254,  566, 254,  566, 254,  566, 1040,  546, 252,  568, 252,  566, 1042,  546, 1040,  546, 254,  566, 254,  566, 254,  566, 252,  566, 252,  566, 252,  566, 1040,  546, 1040,  546, 1040,  546, 1042,  546, 252,  566, 252,  566, 254,  566, 252,  566, 252,  566, 254,  566, 252,  566, 1042,  544, 1040,  546, 1040,  546, 252,  566, 252,  566, 252,  566, 256,  562, 252,  566, 252,  566, 254,  566, 254,  564, 254,  566, 252,  566, 254,  564, 254,  566, 252,  566, 254,  564, 254,  566, 252,  566, 254,  564, 252,  566, 254,  566, 254,  566, 252,  566, 252,  566, 252,  566, 254,  566, 254,  564, 254,  566, 254,  564, 252,  566, 254,  566, 1042,  546, 252,  566, 254,  566, 252,  566, 1040,  546, 1040,  546, 1040,  546, 1040,  546, 252,  568, 252,  566, 254,  564, 254,  566, 252,  566};  // TCL112AC
void setup() {
  irsend.begin();
  Serial.begin(115200);
  delay(2000);
}

void loop() {
  delay(2000);
  Serial.println("Enviando sinal de ligar");
  irsend.sendRaw(rawDataLig, 227, 38);  // Send a raw data capture at 38kHz.
  Serial.println("Sinal enviado: ");
  delay(2000);

  Serial.println("Enviando sinal de desligar");
  irsend.sendRaw(rawDataDesl, 227, 38);  // Send a raw data capture at 38kHz.
  Serial.println("Sinal enviado: ");
  delay(2000);
}
